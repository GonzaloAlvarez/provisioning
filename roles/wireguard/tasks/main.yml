---
- name: Reboot to ensuer we have the right kernel
  reboot:

- name: Rebuild facts
  ansible.builtin.setup:

- name: Add wireguard ppa (Ubuntu)
  apt_repository:
    repo: 'ppa:wireguard/wireguard'
  when:
    - ansible_distribution == "Ubuntu"
    - ansible_distribution_major_version|int < 20

- name: Install linux headers (Ubuntu)
  apt:
    update_cache: yes
    state: present
    name: linux-headers-generic
  when:
    - ansible_distribution == "Ubuntu"
    - ansible_distribution_major_version|int < 20

- name: Get DEB architecture
  command: dpkg --print-architecture
  register: deb_architecture
  when:
    - ansible_distribution == "Debian"

- name: Get Kernel version
  command: uname -r
  register: kernel_version
  when:
    - ansible_distribution == "Debian"

- name: Install kernerl headers (Debian)
  package:
    name:
      - "linux-headers-{{ deb_architecture.stdout }}"
      - "linux-headers-{{ kernel_version.stdout }}"
  when:
    - ansible_distribution == "Debian"

- name: Add backports repository (Debian)
  copy:
    src: templates/backports.list
    dest: /etc/apt/sources.list.d/backport.list
    mode: 0644
  when:
    - ansible_distribution == "Debian" and debian_enable_backports

- name: Install wireguard (apt)
  apt:
    update_cache: yes
    state: present
    name: 
      - wireguard
      - resolvconf
  when:
    - ansible_distribution == "Ubuntu" or ansible_distribution == "Debian"

- name: Install QREncode
  package:
    name: qrencode
    state: present

- name: Read private key
  stat:
    path: "{{ wireguard_path }}/privatekey"
  register: privatekey

- name: Generate wireguard keys
  shell: set -o pipefail && \
         umask 077; wg genkey | tee {{ wireguard_path  }}/privatekey | wg pubkey > {{ wireguard_path }}/publickey
  args:
    executable: /bin/bash
  when: not privatekey.stat.exists

- name: Read private key
  slurp:
    src: "{{ wireguard_path }}/privatekey"
  register: private

- name: Read public key
  slurp:
    src: "{{ wireguard_path }}/publickey"
  register: public

- name: Generate configs
  template:
    src: interface.conf.j2
    dest: "{{ wireguard_path }}/{{ wireguard_network_name }}.conf"
    owner: root
    group: root
    mode: "u=rw,g=r,o="
  register: config

- name: Reboot box to load module
  reboot:
  notify:
    - Enable wg-quick service
    - Restart wg-quick service
